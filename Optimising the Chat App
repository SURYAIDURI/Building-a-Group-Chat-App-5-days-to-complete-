
{
  "name": "chatroom",
  "version": "1.0.0",
  "description": "",
  "main": "app.js",
  "scripts": {
	"start": "nodemon ./app.js --exec babel-node -e js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  
  <!DOCTYPE html>
<html lang="en">
<head>
	<title>ChatRoom</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel = "stylesheet" href="style.css">
	<script>
		var name = prompt("Please enter your name");
	</script>
</head>
<body>
    
    <div id="intro">
      <h1>ChatRoom</h1>
    </div>
    
    <ul id="messages"></ul>
    
    <form action="">
      <input id="m" placeholder="Enter your message..." autocomplete="off" required /><button>Send</button>
    </form>

    <script src="/socket.io/socket.io.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
		
    		var socket = io();

    		socket.emit('joining msg', name);

    		$('form').submit(function(e) {
    			e.preventDefault();            // will prevent page reloading
      			socket.emit('chat message', (name + ':  ' + $('#m').val()));
                        $('#messages').append($('<li id="list">').text('You:  ' + $('#m').val()));
      			$('#m').val('');
      			return false;
    		});
    		socket.on('chat message', function(msg){
      			$('#messages').append($('<li>').text(msg));
    		});
  		
    </script>
</body>
</html>

 { 
	margin: 0; 
	padding: 0; 
	box-sizing: border-box; 
}
 
  #intro{
 	background-color: #008000;
 	color: #FFFFFF;
 	height: 5%;	
 } 


 body { 
 	font: 20px;
}

 
 
 form { 
 	background: #000000; 
 	padding: 3px; 
 	position: fixed; 
 	bottom: 5px; 
 	width: 100%; 
 }
 
 form input { 
 	background-color: #e6ffe6;
 	border: 0; 
 	padding: 10px; 
 	width: 90%; 
 	margin-right: 0.5%; 
 }
 
 form button { 
 	width: 9%; 
 	background: #00e600;
 	border: none; 
 	padding: 5px; 
 	font-size: 20px; 
 }
 
 #messages { 

 	margin: 0; 
 	padding: 0; 
 	
 }
 
 #messages li { 
 	padding: 5px 10px; 
 }
 
 #messages li:nth-child(odd) { 
 	background: #b3ffb3; 
 }


#list{
	text-align: right;
}
var express = require('express');
var http = require('http');

var app = express();
var server = http.createServer(app);

var io = require('socket.io')(server);
var path = require('path');


app.use(express.static(path.join(__dirname,'./public')));

app.get('/', (req, res) => {
  res.sendFile(__dirname + '/public/index.html');
});


var name;

io.on('connection', (socket) => {
  console.log('new user connected');
  
  socket.on('joining msg', (username) => {
  	name = username;
  	io.emit('chat message', `---${name} joined the chat---`);
  });
  
  socket.on('disconnect', () => {
    console.log('user disconnected');
    io.emit('chat message', `---${name} left the chat---`);
    
  });
  socket.on('chat message', (msg) => {
    socket.broadcast.emit('chat message', msg);         //sending message to all except the sender
  });
});

server.listen(3000, () => {
  console.log('Server listening on :3000');
});

  
